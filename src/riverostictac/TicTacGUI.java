/*
 * Creates a new Tic Tac GUI, keeps tally of computer score, player score
 * and implements AI opponent based on best possible move.
 *
 * @author Victor Riveros
 */
package riverostictac;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.Random;

public class TicTacGUI extends javax.swing.JFrame {
    static boolean oneTaken, twoTaken, threeTaken, fourTaken, fiveTaken, sixTaken, sevenTaken, eightTaken, nineTaken;
    static int computerScore = 0,playerScore = 0;
    static String buttons[][] = new String[3][3];
    boolean gameOver;
    

    /**
     * Creates new form TicTacGUI
     */
    public TicTacGUI() {
        initComponents();
        for(int i=0; i<3; i++){
            for(int x=0; x<3; x++){
                buttons[i][x]="";
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        computer = new javax.swing.JLabel();
        player = new javax.swing.JLabel();
        playAgain = new javax.swing.JButton();
        save = new javax.swing.JButton();
        load = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel1.setText("Computer");

        jLabel2.setText("Player");

        computer.setBackground(new java.awt.Color(255, 255, 255));
        computer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        computer.setText("0");
        computer.setOpaque(true);

        player.setBackground(new java.awt.Color(255, 255, 255));
        player.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player.setText("0");
        player.setOpaque(true);

        playAgain.setForeground(new java.awt.Color(255, 51, 51));
        playAgain.setText("Play Again");
        playAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playAgainActionPerformed(evt);
            }
        });

        save.setForeground(new java.awt.Color(255, 51, 51));
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        load.setForeground(new java.awt.Color(255, 51, 51));
        load.setText("Load");
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(computer, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(player, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(load, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(playAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(computer, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(player, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(load, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(!oneTaken && !gameOver){
            oneTaken = true;
            jButton1.setText("X");
            buttons[0][0] = "player";
            checkWin();
            if(!gameOver){
                computerTurn();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(!twoTaken && !gameOver){
            twoTaken = true;
            jButton2.setText("X");
            buttons[0][1] = "player";
            checkWin();
            if(!gameOver){
                computerTurn();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(!threeTaken && !gameOver){
            threeTaken = true;
            jButton3.setText("X");
            buttons[0][2] = "player";
            checkWin();
            if(!gameOver){
                computerTurn();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(!fourTaken && !gameOver){
            fourTaken = true;
            jButton4.setText("X");
            buttons[1][0] = "player";
            checkWin();
            if(!gameOver){
                computerTurn();
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if(!fiveTaken && !gameOver){
            fiveTaken = true;
            jButton5.setText("X");
            buttons[1][1] = "player";
            checkWin();
            if(!gameOver){
                computerTurn();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if(!sixTaken && !gameOver){
            sixTaken = true;
            jButton6.setText("X");
            buttons[1][2] = "player";
            checkWin();
            if(!gameOver){
                computerTurn();
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if(!sevenTaken && !gameOver){
            sevenTaken = true;
            jButton7.setText("X");
            buttons[2][0] = "player";
            checkWin();
            if(!gameOver){
                computerTurn();
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if(!eightTaken && !gameOver){
            eightTaken = true;
            jButton8.setText("X");
            buttons[2][1] = "player";
            checkWin();
            if(!gameOver){
                computerTurn();
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if(!nineTaken && !gameOver){
            nineTaken = true;
            jButton9.setText("X");
            buttons[2][2] = "player";
            checkWin();
            if(!gameOver){
                computerTurn();
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
    *Sets game over to false and clears the board to start a new round.
    */
    private void playAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAgainActionPerformed
        // TODO add your handling code here:
        clear();
        gameOver = false;
    }//GEN-LAST:event_playAgainActionPerformed

    /**
    *Handles the saving of the score
    */
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        File output = new File("score.txt");
        try{
            PrintWriter out = new PrintWriter(output);
            String scoreSaved = playerScore+"-"+computerScore;
            out.println(scoreSaved);
            out.close();
        } catch(Exception x){
            System.out.println("Error encountered " + x.toString());
            }
    }//GEN-LAST:event_saveActionPerformed

    /**
    *Handles the loading of the score.
    */
    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        // TODO add your handling code here:
        File inputFile = new File("score.txt");
        try {
            Scanner input = new Scanner(inputFile);
            while(input.hasNextLine()){
                String string = input.nextLine();
                String[] split = string.split("-");
                String playerText = split[0];
                String computerText = split[1];
                playerScore = Integer.parseInt(playerText);
                computerScore = Integer.parseInt(computerText); 
            }
        } 
        catch(FileNotFoundException | NumberFormatException z){
            System.out.println("The input file \"score.txt\" was not found.");
            System.out.println(z.toString());
        }
        player.setText(String.valueOf(playerScore));
        computer.setText(String.valueOf(computerScore));
    }//GEN-LAST:event_loadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicTacGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicTacGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicTacGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicTacGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicTacGUI().setVisible(true);
            }
        });
        
    }
    
    /**
    *Checks all possible winning scenarios and adds point to the winning player's score.
    */
    public void checkWin(){
        if((buttons[0][0].equals(buttons[0][1])) && (buttons[0][0].equals(buttons[0][2]))){
            if(buttons[0][0].equals("player")){
                playerScore ++;
                gameOver = true;
            }
            else if(buttons[0][0].equals("computer")){
                computerScore ++;
                gameOver = true; 
            }
        }
        if((buttons[1][0].equals(buttons[1][1])) && (buttons[1][0].equals(buttons[1][2]))){
            if(buttons[1][0].equals("player")){
                playerScore ++;
                gameOver = true;
            }
            else if(buttons[1][0].equals("computer")){
                computerScore ++;
                gameOver = true;
            }
        }
        if((buttons[2][0].equals(buttons[2][1])) && (buttons[2][0].equals(buttons[2][2]))){
            if(buttons[2][0].equals("player")){
                playerScore ++;
                gameOver = true;
            }
            else if(buttons[2][0].equals("computer")){
                computerScore ++;
                gameOver = true;
            }   
        }
        if((buttons[0][0].equals(buttons[1][0])) && (buttons[1][0].equals(buttons[2][0]))){
            if(buttons[0][0].equals("player")){
                playerScore ++;
                gameOver = true;
            }
            else if(buttons[0][0].equals("computer")){
                computerScore ++;
                gameOver = true;
            }  
        }
        if((buttons[0][1].equals(buttons[1][1])) && (buttons[0][1].equals(buttons[2][1]))){
            if(buttons[0][1].equals("player")){
                playerScore ++;
                gameOver = true;
            }
            else if(buttons[0][1].equals("computer")){
                computerScore ++;
                gameOver = true;
            }   
        }
        if((buttons[0][2].equals(buttons[1][2])) && (buttons[0][2].equals(buttons[2][2]))){
            if(buttons[0][2].equals("player")){
                playerScore ++;
                gameOver = true;
            }
            else if(buttons[0][2].equals("computer")){
                computerScore ++;
                gameOver = true;
            }   
        }
        if((buttons[0][0].equals(buttons[1][1])) && (buttons[0][0].equals(buttons[2][2]))){
            if(buttons[0][0].equals("player")){
                playerScore ++;
                gameOver = true;
            }
            else if(buttons[0][0].equals("computer")){
                computerScore ++;
                gameOver = true;
            }     
        }
        if((buttons[2][0].equals(buttons[1][1])) && (buttons[2][0].equals(buttons[0][2]))){
            if(buttons[2][0].equals("player")){
                playerScore ++;
                gameOver = true;
            }
            else if(buttons[2][0].equals("computer")){
                computerScore ++;
                gameOver = true;
            }
        }
        if(oneTaken && twoTaken && threeTaken && fourTaken && fiveTaken && sixTaken && sevenTaken && eightTaken && nineTaken){
            gameOver = true;
        }
        
        
        player.setText(String.valueOf(playerScore));
        computer.setText(String.valueOf(computerScore));
        
    }
    
    /**
    *clears the entire table and array.
    */
    public void clear(){
        jButton1.setText("");
        jButton2.setText("");
        jButton3.setText("");
        jButton4.setText("");
        jButton5.setText("");
        jButton6.setText("");
        jButton7.setText("");
        jButton8.setText("");
        jButton9.setText("");
        for(int i=0; i<3; i++){
            for(int x=0; x<3; x++){
                buttons[i][x]="";
            }
        }
        oneTaken = false;
        twoTaken = false;
        threeTaken = false;
        fourTaken = false;
        fiveTaken = false;
        sixTaken = false;
        sevenTaken = false;
        eightTaken = false;
        nineTaken = false;
    }
    
    /**
    *AI method. Runs a random number between 0 and 3. If 0, chooses a random square. Else, searches for nearest
    square to win. If none are present, goes into defend mode. If none, chooses random square again.
    */
    public void computerTurn(){
        Random rand= new Random();
        int number = rand.nextInt(4);
        if(number == 0){
            computerRandom();
        }
        else{
        //horizonal first row
        //ATTACK STARTS HERE
        if(buttons[0][0].equals(buttons[0][1]) && buttons[0][0].equals("computer") && !threeTaken){
            buttons[0][2] = "computer";
            jButton3.setText("O");            
            threeTaken = true;
            checkWin();
        }
        else if(buttons[0][1].equals(buttons[0][2]) && buttons[0][1].equals("computer") && !oneTaken){
            buttons[0][0] = "computer";
            jButton1.setText("O");
            oneTaken = true;
            checkWin();
        }
        else if(buttons[0][0].equals(buttons[0][2]) && buttons[0][0].equals("computer") && !twoTaken){
            buttons[0][1] = "computer";
            jButton2.setText("O");
            twoTaken = true;
            checkWin();
        }
        //horizontal second row
        else if(buttons[1][0].equals(buttons[1][1]) && buttons[1][0].equals("computer") && !sixTaken){
            buttons[1][2] = "computer";
            jButton6.setText("O");            
            sixTaken = true;
            checkWin();
        }
        else if(buttons[1][1].equals(buttons[1][2]) && buttons[1][1].equals("computer") && !fourTaken){
            buttons[1][0] = "computer";
            jButton4.setText("O");
            fourTaken = true;
            checkWin();
        }
        else if(buttons[1][0].equals(buttons[1][2]) && buttons[1][0].equals("computer") && !fiveTaken){
            buttons[1][1] = "computer";
            jButton5.setText("O");
            fiveTaken = true;
            checkWin();
        }
        //horizontal third row
        else if(buttons[2][0].equals(buttons[2][1]) && buttons[2][0].equals("computer") && !nineTaken){
            buttons[2][2] = "computer";
            jButton9.setText("O");            
            nineTaken = true;
            checkWin();
        }
        else if(buttons[2][1].equals(buttons[2][2]) && buttons[2][1].equals("computer") && !sevenTaken){
            buttons[2][0] = "computer";
            jButton7.setText("O");
            sevenTaken = true;
            checkWin();
        }
        else if(buttons[2][0].equals(buttons[2][2]) && buttons[2][0].equals("computer") && !eightTaken){
            buttons[2][1] = "computer";
            jButton8.setText("O");
            eightTaken = true;
            checkWin();
        }
        //vertical first column
        else if(buttons[0][0].equals(buttons[1][0]) && buttons[0][0].equals("computer") && !sevenTaken){
            buttons[2][0] = "computer";
            jButton7.setText("O");            
            sevenTaken = true;
            checkWin();
        }
        else if(buttons[0][0].equals(buttons[2][0]) && buttons[0][0].equals("computer") && !fourTaken){
            buttons[1][0] = "computer";
            jButton4.setText("O");
            fourTaken = true;
            checkWin();
        }
        else if(buttons[1][0].equals(buttons[2][0]) && buttons[1][0].equals("computer") && !oneTaken){
            buttons[0][0] = "computer";
            jButton1.setText("O");
            oneTaken = true;
            checkWin();
        }
        //vertical second column
        else if(buttons[0][1].equals(buttons[1][1]) && buttons[0][1].equals("computer") && !eightTaken){
            buttons[2][1] = "computer";
            jButton8.setText("O");            
            eightTaken = true;
            checkWin();
        }
        else if(buttons[0][1].equals(buttons[2][1]) && buttons[0][1].equals("computer") && !fiveTaken){
            buttons[1][1] = "computer";
            jButton5.setText("O");
            fiveTaken = true;
            checkWin();
        }
        else if(buttons[1][1].equals(buttons[2][1]) && buttons[1][1].equals("computer") && !twoTaken){
            buttons[0][1] = "computer";
            jButton2.setText("O");
            twoTaken = true;
            checkWin();
        }
        //vertical third column
        else if(buttons[0][2].equals(buttons[1][2]) && buttons[0][2].equals("computer") && !nineTaken){
            buttons[2][2] = "computer";
            jButton9.setText("O");            
            nineTaken = true;
            checkWin();
        }
        else if(buttons[0][2].equals(buttons[2][2]) && buttons[0][2].equals("computer") && !sixTaken){
            buttons[1][2] = "computer";
            jButton6.setText("O");
            sixTaken = true;
            checkWin();
        }
        else if(buttons[1][2].equals(buttons[2][2]) && buttons[1][2].equals("computer") && !threeTaken){
            buttons[0][2] = "computer";
            jButton3.setText("O");
            threeTaken = true;
            checkWin();
        }
        //diagonals
        else if(buttons[0][0].equals(buttons[1][1]) && buttons[0][0].equals("computer") && !nineTaken){
            buttons[2][2] = "computer";
            jButton9.setText("O");            
            nineTaken = true;
            checkWin();
        }
        else if(buttons[0][0].equals(buttons[2][2]) && buttons[0][0].equals("computer") && !fiveTaken){
            buttons[1][1] = "computer";
            jButton5.setText("O");
            fiveTaken = true;
            checkWin();
        }
        else if(buttons[1][1].equals(buttons[2][2]) && buttons[1][1].equals("computer") && !oneTaken){
            buttons[0][0] = "computer";
            jButton1.setText("O");
            oneTaken = true;
            checkWin();
        }
        else if(buttons[0][2].equals(buttons[1][1]) && buttons[0][2].equals("computer") && !sevenTaken){
            buttons[2][0] = "computer";
            jButton7.setText("O");            
            sevenTaken = true;
            checkWin();
        }
        else if(buttons[0][2].equals(buttons[2][0]) && buttons[0][2].equals("computer") && !fiveTaken){
            buttons[1][1] = "computer";
            jButton5.setText("O");
            fiveTaken = true;
            checkWin();
        }
        else if(buttons[1][1].equals(buttons[2][0]) && buttons[1][1].equals("computer") && !threeTaken){
            buttons[0][2] = "computer";
            jButton3.setText("O");
            threeTaken = true;
            checkWin();
        }
        //horizonal first row 
        //DEFEND STARTS HERE
        else if(buttons[0][0].equals(buttons[0][1]) && buttons[0][0].equals("player") && !threeTaken){
            buttons[0][2] = "computer";
            jButton3.setText("O");            
            threeTaken = true;
            checkWin();
        }
        else if(buttons[0][1].equals(buttons[0][2]) && buttons[0][1].equals("player") && !oneTaken){
            buttons[0][0] = "computer";
            jButton1.setText("O");
            oneTaken = true;
            checkWin();
        }
        else if(buttons[0][0].equals(buttons[0][2]) && buttons[0][0].equals("player") && !twoTaken){
            buttons[0][1] = "computer";
            jButton2.setText("O");
            twoTaken = true;
            checkWin();
        }
        //horizontal second row
        else if(buttons[1][0].equals(buttons[1][1]) && buttons[1][0].equals("player") && !sixTaken){
            buttons[1][2] = "computer";
            jButton6.setText("O");            
            sixTaken = true;
            checkWin();
        }
        else if(buttons[1][1].equals(buttons[1][2]) && buttons[1][1].equals("player") && !fourTaken){
            buttons[1][0] = "computer";
            jButton4.setText("O");
            fourTaken = true;
            checkWin();
        }
        else if(buttons[1][0].equals(buttons[1][2]) && buttons[1][0].equals("player") && !fiveTaken){
            buttons[1][1] = "computer";
            jButton5.setText("O");
            fiveTaken = true;
            checkWin();
        }
        //horizontal third row
        else if(buttons[2][0].equals(buttons[2][1]) && buttons[2][0].equals("player") && !nineTaken){
            buttons[2][2] = "computer";
            jButton9.setText("O");            
            nineTaken = true;
            checkWin();
        }
        else if(buttons[2][1].equals(buttons[2][2]) && buttons[2][1].equals("player") && !sevenTaken){
            buttons[2][0] = "computer";
            jButton7.setText("O");
            sevenTaken = true;
            checkWin();
        }
        else if(buttons[2][0].equals(buttons[2][2]) && buttons[2][0].equals("player") && !eightTaken){
            buttons[2][1] = "computer";
            jButton8.setText("O");
            eightTaken = true;
            checkWin();
        }
        //vertical first column
        else if(buttons[0][0].equals(buttons[1][0]) && buttons[0][0].equals("player") && !sevenTaken){
            buttons[2][0] = "computer";
            jButton7.setText("O");            
            sevenTaken = true;
            checkWin();
        }
        else if(buttons[0][0].equals(buttons[2][0]) && buttons[0][0].equals("player") && !fourTaken){
            buttons[1][0] = "computer";
            jButton4.setText("O");
            fourTaken = true;
            checkWin();
        }
        else if(buttons[1][0].equals(buttons[2][0]) && buttons[1][0].equals("player") && !oneTaken){
            buttons[0][0] = "computer";
            jButton1.setText("O");
            oneTaken = true;
            checkWin();
        }
        //vertical second column
        else if(buttons[0][1].equals(buttons[1][1]) && buttons[0][1].equals("player") && !eightTaken){
            buttons[2][1] = "computer";
            jButton8.setText("O");            
            eightTaken = true;
            checkWin();
        }
        else if(buttons[0][1].equals(buttons[2][1]) && buttons[0][1].equals("player") && !fiveTaken){
            buttons[1][1] = "computer";
            jButton5.setText("O");
            fiveTaken = true;
            checkWin();
        }
        else if(buttons[1][1].equals(buttons[2][1]) && buttons[1][1].equals("player") && !twoTaken){
            buttons[0][1] = "computer";
            jButton2.setText("O");
            twoTaken = true;
            checkWin();
        }
        //vertical third column
        else if(buttons[0][2].equals(buttons[1][2]) && buttons[0][2].equals("player") && !nineTaken){
            buttons[2][2] = "computer";
            jButton9.setText("O");            
            nineTaken = true;
            checkWin();
        }
        else if(buttons[0][2].equals(buttons[2][2]) && buttons[0][2].equals("player") && !sixTaken){
            buttons[1][2] = "computer";
            jButton6.setText("O");
            sixTaken = true;
            checkWin();
        }
        else if(buttons[1][2].equals(buttons[2][2]) && buttons[1][2].equals("player") && !threeTaken){
            buttons[0][2] = "computer";
            jButton3.setText("O");
            threeTaken = true;
            checkWin();
        }
        //diagonals
        else if(buttons[0][0].equals(buttons[1][1]) && buttons[0][0].equals("player") && !nineTaken){
            buttons[2][2] = "computer";
            jButton9.setText("O");            
            nineTaken = true;
            checkWin();
        }
        else if(buttons[0][0].equals(buttons[2][2]) && buttons[0][0].equals("player") && !fiveTaken){
            buttons[1][1] = "computer";
            jButton5.setText("O");
            fiveTaken = true;
            checkWin();
        }
        else if(buttons[1][1].equals(buttons[2][2]) && buttons[1][1].equals("player") && !oneTaken){
            buttons[0][0] = "computer";
            jButton1.setText("O");
            oneTaken = true;
            checkWin();
        }
        else if(buttons[0][2].equals(buttons[1][1]) && buttons[0][2].equals("player") && !sevenTaken){
            buttons[2][0] = "computer";
            jButton7.setText("O");            
            sevenTaken = true;
            checkWin();
        }
        else if(buttons[0][2].equals(buttons[2][0]) && buttons[0][2].equals("player") && !fiveTaken){
            buttons[1][1] = "computer";
            jButton5.setText("O");
            fiveTaken = true;
            checkWin();
        }
        else if(buttons[1][1].equals(buttons[2][0]) && buttons[1][1].equals("player") && !threeTaken){
            buttons[0][2] = "computer";
            jButton3.setText("O");
            threeTaken = true;
            checkWin();
        }
        else{
            computerRandom();
        }
        }
        
    }
    
    /**
     * Generates a random number between 1 and 9 and checks if it is available.
     */
    public void computerRandom(){
        Random rand= new Random();
        boolean available = false;
        do{
        int number = rand.nextInt(9)+1;
        switch(number){
            case 1:
                if(!oneTaken){
                    available = true;
                    buttons[0][0] = "computer";
                    jButton1.setText("O");
                    oneTaken = true;
                    checkWin();
                }
                break;
            case 2:
                if(!twoTaken){
                    available = true;
                    buttons[0][1] = "computer";
                    jButton2.setText("O");
                    twoTaken = true;
                    checkWin();
                }
                break;
            case 3:
                if(!threeTaken){
                    available = true;
                    buttons[0][2] = "computer";
                    jButton3.setText("O");
                    threeTaken = true;
                    checkWin();
                }
                break;
            case 4:
                if(!fourTaken){
                    available = true;
                    buttons[1][0] = "computer";
                    jButton4.setText("O");
                    fourTaken = true;
                    checkWin();
                }
                break;
            case 5:
                if(!fiveTaken){
                    available = true;
                    buttons[1][1] = "computer";
                    jButton5.setText("O");
                    fiveTaken = true;
                    checkWin();
                }
                break;
            case 6:
                if(!sixTaken){
                    available = true;
                    buttons[1][2] = "computer";
                    jButton6.setText("O");
                    sixTaken = true;
                    checkWin();
                }
                break;
            case 7:
                if(!sevenTaken){
                    available = true;
                    buttons[2][0] = "computer";
                    jButton7.setText("O");
                    sevenTaken = true;
                    checkWin();
                }
                break;
            case 8:
                if(!eightTaken){
                    available = true;
                    buttons[2][1] = "computer";
                    jButton8.setText("O");
                    eightTaken = true;
                    checkWin();
                }
                break;
            case 9:
                if(!nineTaken){
                    available = true;
                    buttons[2][2] = "computer";
                    jButton9.setText("O");
                    nineTaken = true;
                    checkWin();
                }
                break;
        }
        }while(available == false);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel computer;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton load;
    private javax.swing.JButton playAgain;
    private javax.swing.JLabel player;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
